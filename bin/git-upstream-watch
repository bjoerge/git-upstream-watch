#!/usr/bin/env node

var program = require('commander');
var fs = require('fs');
var upstreamWatch = require('../');
var path = require('path');
var debug = require('debug')('git-upstream-watch');

program
  .version(require("../package").version)
  .arguments('[directories...]')
  .option('-a, --always', 'Always notify about pending changes.')
  .option('-i, --check-interval [interval]', 'Recheck for changes in upstream branch every n seconds. If this option is given, the process will run forever', Number, 0)
  .option('-n, --notify-interval [interval]', "Don't notify about each repo more often than every n seconds. This option will only have an effect when --check-interval is specified", Number, 60 * 20)
  .parse(process.argv);

function isGitRepo(dir) {
  return fs.existsSync(path.join(dir, ".git"));
}

function validateGitRepoDir(dir) {
  if (!isGitRepo(dir)) {
    console.log();
    console.error("Error: '"+dir+"' is not a git repository");
    process.exit(1);
  }
  return dir;
}

// Recursively find all repo directories below the dirs given by the args list
var repoDirs = program.args.map(validateGitRepoDir)

repoDirs.map(function (dir) {
  var opts = {
    always: program.always,
    notifyInterval: program.notifyInterval,
    checkInterval: program.checkInterval,
    cwd: path.resolve(dir)
  };

  debug("Initializing watcher on %s, with options %o", dir, opts);

  upstreamWatch(opts);
});
